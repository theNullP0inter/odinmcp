_format_version: "3.0"
_transform: true

services:
- name: heimdall
  url: http://heimdall:8080
  routes:
  - name: heimdall
    paths:
    - /heimdall/
    preserve_host: true
  # Add CORS plugin to use it via mcp-inspector
  plugins:
  - name: cors
    config:
      origins:
        - "*"
      methods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
        - PATCH
        - HEAD
      credentials: true



- name: odin
  url: http://odin:80
  plugins:
  - name: oidc
    service: odin
    config:
      client_id: "bifrost"
      client_secret:  "REPLACE_WITH_A_SECRET_STRING"
      discovery: "http://localhost:8000/heimdall/realms/asgard/.well-known/openid-configuration"
      introspection_endpoint: "http://localhost:8000/heimdall/realms/asgard/protocol/openid-connect/token/introspect"
      token_endpoint_auth_method: "client_secret_post"
      scope: "email organization profile"
      realm: "asgard"
      unauth_action: "deny"
  
  - name: cors
    config:
      origins:
        - "*"
      methods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
        - PATCH
        - HEAD
      credentials: true
      
  routes:
  - name: odin-v1-api
    paths:
    - /api/v1/
    preserve_host: true

# MCP expects the odin server to maintain the openid configuration.
# It always hits URL_BASE/.well-known/oauth-authorization-server.
# We will use bifrost to redirect it to heimdall correctly.
- name: odinmcp-auth-well-known-config 
  url: http://heimdall:8080/realms/asgard/.well-known/openid-configuration
  routes:
  - name: odinmcp-auth-well-known-config
    paths:
    - /.well-known/oauth-authorization-server
    preserve_host: true
  plugins:
  - name: cors
    config:
      origins:
        - "*"
      methods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
        - PATCH
        - HEAD
      credentials: true

